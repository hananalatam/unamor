---
// Importar el componente de navegación del blog
import BlogNavigation from '../pages/blog/BlogNavigation.astro';

// Definir las rutas de navegación principales con secciones en lugar de páginas separadas
const navItems = [
  { href: "/#inicio", text: "Inicio" },
  { href: "/#nosotros", text: "Nosotros" },
  { href: "/#servicios", text: "Servicios" },
  { href: "/#contacto", text: "Contacto" },
];

// Determinar la ruta actual para resaltar el enlace activo
const currentPath = Astro.url.pathname;
---

<nav>
  <button 
    id="menu-toggle"
    class="lg:hidden flex flex-col justify-center items-center space-y-1.5 w-10 h-10 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
    aria-label="Abrir menú"
    aria-expanded="false"
    aria-controls="mobile-menu"
  >
    <span class="block w-6 h-0.5 bg-body-600 transition-transform duration-300 ease-in-out"></span>
    <span class="block w-6 h-0.5 bg-body-600 transition-all duration-300 ease-in-out"></span>
    <span class="block w-6 h-0.5 bg-body-600 transition-transform duration-300 ease-in-out"></span>
  </button>
  
  <div id="mobile-menu" class="hidden lg:block absolute lg:relative top-full left-0 w-full lg:w-auto bg-white lg:bg-transparent shadow-lg lg:shadow-none z-50 lg:z-auto transition-transform duration-300 ease-in-out">
    <ul class="flex flex-col lg:flex-row items-start lg:items-center py-4 lg:py-0 px-6 lg:px-0 space-y-4 lg:space-y-0 lg:space-x-8">
        {navItems.map((item) => (
            <li>
              <a 
                href={item.href} 
                class={`relative text-base font-medium transition-colors duration-300 hover:text-primary-500 ${
                  (currentPath === '/' && item.href.includes('#')) || (currentPath + '#' + item.href.split('#')[1] === item.href)
                    ? "text-primary-500 after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-primary-500" 
                    : "text-body-600"
                }`}
                aria-current={
                  (currentPath === '/' && item.href.includes('#')) || (currentPath + '#' + item.href.split('#')[1] === item.href)
                    ? "page" 
                    : undefined
                }
              >
                {item.text}
              </a>
            </li>
          ))}
          
          {/* Añadir el componente BlogNavigation */}
          <BlogNavigation />
          
          <li class="lg:ml-4">
            <button 
              class="whatsapp-btn flex items-center bg-green-500 hover:bg-green-600 text-white font-medium py-2 px-4 rounded-md transition-colors duration-300 ease-in-out focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2"
            >
              <svg class="w-5 h-5 mr-2 -ml-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
              Contactar
            </button>
          </li>
        </ul>
      </div>
    </nav>
    
    <script>
      // Script para el menú móvil y navegación suave
      document.addEventListener('astro:page-load', () => {
        const menuToggle = document.getElementById('menu-toggle');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (menuToggle && mobileMenu) {
          menuToggle.addEventListener('click', () => {
            const expanded = menuToggle.getAttribute('aria-expanded') === 'true';
            menuToggle.setAttribute('aria-expanded', expanded ? 'false' : 'true');
            
            // Toggle mobile menu
            mobileMenu.classList.toggle('hidden');
            
            // Animate hamburger menu
            const spans = menuToggle.querySelectorAll('span');
            if (spans.length === 3) {
              if (!expanded) {
                spans[0].classList.add('rotate-45', 'translate-y-2');
                spans[1].classList.add('opacity-0');
                spans[2].classList.add('-rotate-45', '-translate-y-2');
              } else {
                spans[0].classList.remove('rotate-45', 'translate-y-2');
                spans[1].classList.remove('opacity-0');
                spans[2].classList.remove('-rotate-45', '-translate-y-2');
              }
            }
          });
          
          // Close menu when clicking a link (on mobile)
          document.querySelectorAll('#mobile-menu a').forEach(link => {
            link.addEventListener('click', () => {
              if (window.innerWidth < 1024) {
                mobileMenu.classList.add('hidden');
                menuToggle.setAttribute('aria-expanded', 'false');
                
                // Reset hamburger menu
                const spans = menuToggle.querySelectorAll('span');
                if (spans.length === 3) {
                  spans[0].classList.remove('rotate-45', 'translate-y-2');
                  spans[1].classList.remove('opacity-0');
                  spans[2].classList.remove('-rotate-45', '-translate-y-2');
                }
              }
            });
          });
        }
        
        // Smooth scroll para navegación entre secciones
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', (e) => {
            e.preventDefault();
            
            const anchorElement = e.currentTarget as HTMLAnchorElement;
            const href = anchorElement.getAttribute('href');
            
            if (!href) return;
            
            const targetId = href.substring(1);
            const targetElement = document.getElementById(targetId);
            
            if (targetElement) {
              window.scrollTo({
                top: targetElement.offsetTop - 80, // Ajustar offset según sea necesario
                behavior: 'smooth'
              });
              
              // Actualizar la URL sin recargar la página
              history.pushState(null, '', `#${targetId}`);
            } else if (href.includes('#')) {
              // Si estamos en otra página y necesitamos ir a una sección de la página principal
              window.location.href = href;
            }
          });
        });
      });
    </script>